version: 2.1
jobs:
 save_hello_world_output:
   docker:
     - image: circleci/node:13.8.0
   steps:
     - run: echo "hello world" > ~/output.txt
     - persist_to_workspace:
         root: ~/
         paths:
           - output.txt

 print_output_file:
   docker:
     - image: circleci/node:13.8.0
   steps:
     - attach_workspace:
        at: ~/
     - run: cat ~/output.txt
 buildev:
   docker:
     - image: cimg/base:2023.05
   steps:
     - checkout
     - setup_remote_docker:
          docker_layer_caching: true
     # test
     - run: |
         docker-compose -f docker-compose.unittests.yml run --rm unittests
         
     # build image
     - run: |
         docker build -f DotNetCoreSampleApi/Dockerfile -t aspnetapp .

     # deploy the image
    #  - run: |
    #      set -eu -o pipefail
    #      echo $HEROKU_API_KEY | docker login --username=$HEROKU_USERNAME --password-stdin registry.heroku.com
    #      docker tag aspnetapp registry.heroku.com/$HEROKU_APP_NAME/web
    #      docker push registry.heroku.com/$HEROKU_APP_NAME/web
    #      docker inspect registry.heroku.com/$HEROKU_APP_NAME/web --format={{.Id}} > WEB_DOCKER_IMAGE_ID_FILE
    #      export WEB_DOCKER_IMAGE_ID=$(cat WEB_DOCKER_IMAGE_ID_FILE)
    #      curl -n -X PATCH https://api.heroku.com/apps/$HEROKU_APP_NAME/formation \
    #         -d '{ "updates": [ { "type": "web", "docker_image": "'"$WEB_DOCKER_IMAGE_ID"'" }]}' \
    #       -H "Content-Type: application/json" \
    #       -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
    #       -H "Authorization: Bearer $HEROKU_API_KEY"

workflows:
  my_workflow:
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
      - buildev
